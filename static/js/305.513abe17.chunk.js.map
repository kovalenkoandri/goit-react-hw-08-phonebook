{"version":3,"file":"static/js/305.513abe17.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","styles/titleStyles.js","styles/boxStyles.js","pages/Contacts.js"],"sourcesContent":["export const selectItems = state => state.contactsSlice.items;\n\nexport const selectFilter = state => state.filterSlice.filter;\n\nexport const selectLoading = state => state.contactsSlice.isLoading;\n\nexport const selectError = state => state.contactsSlice.error;\n","import { deleteContact } from 'redux/phonebook/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectItems, selectFilter } from 'redux/phonebook/selectors';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { iconStyles } from 'styles/iconStyles';\nimport {\n  Button,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  TableContainer,\n} from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n  const filter = useSelector(selectFilter);\n  const renderContacts = () => {\n    return items.filter(el => el.name.includes(filter));\n  };\n  return (\n    <TableContainer>\n      <Table variant=\"simple\" colorScheme=\"teal\">\n        <TableCaption>Imperial table</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Name</Th>\n            <Th>Number</Th>\n            <Th>Action</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {renderContacts().map(element => {\n            const { id, name, number } = element;\n            return (\n              <Tr key={id}>\n                <Td>{`${name}`}</Td>\n                <Td>{`${number}`}</Td>\n                <Td>\n                  <Button\n                    onClick={() => dispatch(deleteContact(id))}\n                    colorScheme=\"teal\"\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    rightIcon={<DeleteIcon sx={iconStyles} />}\n                  >\n                    Delete\n                  </Button>\n                </Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookForm\":\"ContactForm_phonebookForm__KwlhY\",\"inputName\":\"ContactForm_inputName__a8jFO\",\"btnAddContact\":\"ContactForm_btnAddContact__AepU1\"};","import css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from 'redux/phonebook/selectors';\nimport { addContact } from 'redux/phonebook/operations';\nimport { PhoneIcon, EditIcon, CheckCircleIcon } from '@chakra-ui/icons';\nimport { iconStyles } from 'styles/iconStyles';\nimport { Button } from '@chakra-ui/react';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleChangeName = event => setName(event.target.value);\n  const handleChangePhone = event => setNumber(event.target.value);\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n  const handleSubmit = (name, number, event) => {\n    event.preventDefault(); // except refresh page onSubmit\n    if (\n      items.some(el =>\n        el.name.toLocaleUpperCase().includes(name.toLocaleUpperCase())\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form\n      className={css.phonebookForm}\n      onSubmit={event => handleSubmit(name, number, event)}\n      autoComplete=\"off\"\n    >\n      <label htmlFor=\"name\">Name</label>\n      <EditIcon sx={iconStyles} />\n      <input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        className={css.inputName}\n        onChange={handleChangeName}\n        placeholder=\"Enter name!\"\n        value={name}\n      />\n      <label htmlFor=\"number\">Number</label>\n      <PhoneIcon sx={iconStyles} />\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        className={css.inputName}\n        onChange={handleChangePhone}\n        placeholder=\"Enter number!\"\n        value={number}\n      />\n      <Button\n        type=\"submit\"\n        colorScheme=\"teal\"\n        size=\"md\"\n        variant=\"ghost\"\n        rightIcon={<CheckCircleIcon sx={iconStyles} />}\n        className={css.btnAddContact}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputName\":\"Filter_inputName__snXo9\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterTask } from 'redux/phonebook/filterSlice';\nimport { selectFilter } from 'redux/phonebook/selectors';\nimport { Search2Icon } from '@chakra-ui/icons';\nimport { iconStyles } from 'styles/iconStyles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  return (\n    <>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <Search2Icon sx={iconStyles} />\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={css.inputName}\n        onChange={event => dispatch(filterTask(event.target.value))}\n        value={filter}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","export const titleStyles = {\n  fontSize: '24px',\n  fontWeight: '700',\n  lineHeight: '30px',\n  paddingLeft: '0',\n};\n","export const boxStyles = {\n  textShadow: '0 0 20px black',\n  fontWeight: 'bold',\n  fontSize: '20px',\n//   background:\n//     'url(https://picsum.photos/id/1080/200/300) center/cover no-repeat',\n//   width: '100%',\n  gap: '4px',\n  bgGradient: 'linear(to-r, green.500, teal.500)',\n  _hover: {\n      bgGradient: 'linear(to-r, blue.500, yellow.500)',\n      cursor: 'pointer',\n  },\n  borderRadius: 'md',\n  bgClip: 'text',\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport { fetchContacts } from 'redux/phonebook/operations';\nimport { selectError, selectLoading } from 'redux/phonebook/selectors';\nimport { titleStyles } from 'styles/titleStyles';\nimport { boxStyles } from 'styles/boxStyles';\nimport { Box, Text} from '@chakra-ui/react';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Helmet> */}\n      <title>Your tasks</title>\n      {/* </Helmet> */}\n      <Box sx={boxStyles}>\n        <Text sx={titleStyles}>Phonebook</Text>\n        <ContactForm />\n        <Text sx={titleStyles}>Contacts</Text>\n        <Filter />\n        <ContactList />\n      </Box>\n      {isLoading && <b>Loading tasks...</b>}\n      {error && <b>{error}</b>}\n    </>\n  );\n}\n"],"names":["selectItems","state","contactsSlice","items","selectFilter","filterSlice","filter","selectLoading","isLoading","selectError","error","dispatch","useDispatch","useSelector","variant","colorScheme","Tr","Th","el","name","includes","map","element","id","number","Td","onClick","deleteContact","size","rightIcon","sx","iconStyles","useState","setName","setNumber","className","css","onSubmit","event","preventDefault","some","toLocaleUpperCase","alert","addContact","handleSubmit","autoComplete","htmlFor","type","pattern","title","required","onChange","target","value","placeholder","filterTask","titleStyles","fontSize","fontWeight","lineHeight","paddingLeft","boxStyles","textShadow","gap","bgGradient","_hover","cursor","borderRadius","bgClip","Tasks","useEffect","fetchContacts"],"sourceRoot":""}