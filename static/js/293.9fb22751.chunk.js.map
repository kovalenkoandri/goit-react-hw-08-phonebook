{"version":3,"file":"static/js/293.9fb22751.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","styles/inputStyles.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","styles/titleStyles.js","styles/boxStyles.js","pages/Contacts.js"],"sourcesContent":["export const selectItems = state => state.contactsSlice.items;\n\nexport const selectFilter = state => state.filterSlice.filter;\n\nexport const selectLoading = state => state.contactsSlice.isLoading;\n\nexport const selectError = state => state.contactsSlice.error;\n","import { deleteContact } from 'redux/phonebook/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectItems, selectFilter } from 'redux/phonebook/selectors';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { iconStyles } from 'styles/iconStyles';\nimport {\n  Button,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  TableContainer,\n} from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n  const filter = useSelector(selectFilter);\n  const renderContacts = () => {\n    return items.filter(el => el.name.includes(filter));\n  };\n  return (\n    <TableContainer>\n      <Table variant=\"simple\" colorScheme=\"teal\">\n        <TableCaption>Imperial table</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Name</Th>\n            <Th>Number</Th>\n            <Th>Action</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {renderContacts().map(element => {\n            const { id, name, number } = element;\n            return (\n              <Tr key={id}>\n                <Td>{`${name}`}</Td>\n                <Td>{`${number}`}</Td>\n                <Td>\n                  <Button\n                    onClick={() => dispatch(deleteContact(id))}\n                    colorScheme=\"teal\"\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    rightIcon={<DeleteIcon sx={iconStyles} />}\n                  >\n                    Delete\n                  </Button>\n                </Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookForm\":\"ContactForm_phonebookForm__KwlhY\",\"inputName\":\"ContactForm_inputName__a8jFO\",\"btnAddContact\":\"ContactForm_btnAddContact__AepU1\"};","import { useColorMode } from '@chakra-ui/react';\nexport const InputStyles = () => {\n  const { colorMode } = useColorMode();\n  let color;\n  colorMode === 'dark' ? (color = 'green') : (color = 'blue');\n  \n  return { color };\n};\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from 'redux/phonebook/selectors';\nimport { addContact } from 'redux/phonebook/operations';\nimport { PhoneIcon, EditIcon, CheckCircleIcon } from '@chakra-ui/icons';\nimport { iconStyles } from 'styles/iconStyles';\nimport { Button } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { InputStyles } from 'styles/inputStyles';\nimport { Formik } from 'formik';\nimport { Text } from '@chakra-ui/react';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validate={values => {\n        const errors = {};\n\n        if (!values.name) {\n          errors.name = 'Required';\n        } else if (\n          !/[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(\n            values.name\n          )\n        ) {\n          errors.name = 'Invalid name';\n        }\n        if (!values.number) {\n          errors.number = 'Required';\n        } else if (\n          !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n            values.number\n          )\n        ) {\n          errors.number = 'Invalid number';\n        }\n\n        return errors;\n      }}\n      onSubmit={(values, formHelpers) => {\n        const { name } = values;\n        const { number } = values;\n        if (\n          items.some(el =>\n            el.name.toLocaleUpperCase().includes(name.toLocaleUpperCase())\n          )\n        ) {\n          alert(`${name} is already in contacts.`);\n          return;\n        }\n        dispatch(addContact({ name, number }));\n        formHelpers.resetForm();\n      }}\n    >\n      {({\n        values,\n\n        errors,\n\n        touched,\n\n        handleChange,\n\n        handleBlur,\n\n        handleSubmit,\n\n        /* and other goodies */\n      }) => (\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <label>\n            Name may contain only letters, apostrophe, dash and spaces. For\n            example Adrian, Jacob Mercer, Charles de Batz de Castelmore\n            d'Artagnan\n            <EditIcon sx={iconStyles} />\n            <Input\n              type=\"text\"\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"type name here\"\n              value={values.name}\n              sx={InputStyles()}\n              className={css.inputName}\n            />\n          </label>\n          <Text\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            bgClip=\"text\"\n            fontSize=\"1em\"\n            fontWeight=\"extrabold\"\n          >\n            {errors.name && touched.name && errors.name}\n          </Text>\n          <label>\n            Phone number must be digits and can contain spaces, dashes,\n            parentheses and can start with +\n            <PhoneIcon sx={iconStyles} />\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"type number here\"\n              value={values.number}\n              sx={InputStyles()}\n              className={css.inputName}\n            />\n          </label>\n          <Text\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            bgClip=\"text\"\n            fontSize=\"1em\"\n            fontWeight=\"extrabold\"\n          >\n            {errors.number && touched.number && errors.number}\n          </Text>\n          <Button\n            type=\"submit\"\n            colorScheme=\"teal\"\n            size=\"md\"\n            variant=\"ghost\"\n            rightIcon={<CheckCircleIcon sx={iconStyles} />}\n            className={css.btnAddContact}\n          >\n            Submit\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputName\":\"Filter_inputName__snXo9\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterTask } from 'redux/phonebook/filterSlice';\nimport { selectFilter } from 'redux/phonebook/selectors';\nimport { Search2Icon } from '@chakra-ui/icons';\nimport { iconStyles } from 'styles/iconStyles';\nimport { Input } from '@chakra-ui/react';\nimport { InputStyles } from 'styles/inputStyles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <Search2Icon sx={iconStyles} />\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          className={css.inputName}\n          onChange={event => dispatch(filterTask(event.target.value))}\n          value={filter}\n          sx={InputStyles()}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","export const titleStyles = {\n  fontSize: '24px',\n  fontWeight: '700',\n  lineHeight: '30px',\n  paddingLeft: '0',\n};\n","export const boxStyles = {\n  textShadow: '0 0 20px black',\n  fontWeight: 'bold',\n  fontSize: '20px',\n//   background:\n//     'url(https://picsum.photos/id/1080/200/300) center/cover no-repeat',\n//   width: '100%',\n  gap: '4px',\n  bgGradient: 'linear(to-r, green.500, teal.500)',\n  _hover: {\n      bgGradient: 'linear(to-r, blue.500, yellow.500)',\n      cursor: 'pointer',\n  },\n  borderRadius: 'md',\n  bgClip: 'text',\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport { fetchContacts } from 'redux/phonebook/operations';\nimport { selectError, selectLoading } from 'redux/phonebook/selectors';\nimport { titleStyles } from 'styles/titleStyles';\nimport { boxStyles } from 'styles/boxStyles';\nimport { Box, Text} from '@chakra-ui/react';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Helmet> */}\n      <title>Your tasks</title>\n      {/* </Helmet> */}\n      <Box sx={boxStyles}>\n        <Text sx={titleStyles}>Phonebook</Text>\n        <ContactForm />\n        <Text sx={titleStyles}>Contacts</Text>\n        <Filter />\n        <ContactList />\n      </Box>\n      {isLoading && <b>Loading tasks...</b>}\n      {error && <b>{error}</b>}\n    </>\n  );\n}\n"],"names":["selectItems","state","contactsSlice","items","selectFilter","filterSlice","filter","selectLoading","isLoading","selectError","error","dispatch","useDispatch","useSelector","variant","colorScheme","Tr","Th","el","name","includes","map","element","id","number","Td","onClick","deleteContact","size","rightIcon","sx","iconStyles","InputStyles","color","useColorMode","colorMode","initialValues","validate","values","errors","test","onSubmit","formHelpers","some","toLocaleUpperCase","alert","addContact","resetForm","touched","handleChange","handleBlur","handleSubmit","autoComplete","type","onChange","onBlur","placeholder","value","className","css","bgGradient","bgClip","fontSize","fontWeight","event","filterTask","target","titleStyles","lineHeight","paddingLeft","boxStyles","textShadow","gap","_hover","cursor","borderRadius","Tasks","useEffect","fetchContacts"],"sourceRoot":""}